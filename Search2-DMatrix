class Solution {
public:
    int lastOcc(vector<int>&nums,int target){
        int low=0;
        int high=nums.size()-1;
        int temp=-1;
        while(low<=high){
            int mid= low+(high-low)/2;
            if(nums[mid]==target){
              temp=mid;
                low=mid+1;
            }
            else if(nums[mid]>target)high=mid-1;
            else low=mid+1;
        }
        return temp;
    }
    
    int firstOcc(vector<int>&nums,int target){
        int low=0;
        int high=nums.size()-1;
        int temp=-1;
        while(low<=high){
            int mid= low+(high-low)/2;
            if(nums[mid]==target){
                temp=mid;
                high=mid-1;
            }
            else if(nums[mid]>target)high=mid-1;
            else low=mid+1;
        }
        return temp;
    }
    vector<int> searchRange(vector<int>& nums, int target) {
        
        int first=-1;
        int last=-1;
        first=firstOcc(nums,target);
        last=lastOcc(nums,target);
        vector<int>result={first,last};
        return result;
    }
};
