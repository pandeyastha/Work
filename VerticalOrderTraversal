
 */
class Solution {
public:
    vector<vector<int>> verticalTraversal(TreeNode* root) {
        vector<vector<int>>result;
        if(root==NULL) return result;
        map<int,map<int,multiset<int>>>graph;
        queue<pair<TreeNode*,pair<int,int>>>q;
        q.push({root,{0,0}});
        while(!q.empty()){
            
            pair<TreeNode*,pair<int,int>> temp=q.front();
            q.pop();
            TreeNode* node=temp.first;
            int vertical=temp.second.first;
            int level=temp.second.second;
            graph[vertical][level].insert(node->val);
            if(node->left)q.push({node->left,{vertical-1,level+1}});
            if(node->right)q.push({node->right,{vertical+1,level+1}});
        }
        for(auto x:graph){
            vector<int>col;
            for(auto p :x.second)col.insert(col.end(),p.second.begin(),p.second.end());
            result.push_back(col);
        }
        return result;
    }
};
