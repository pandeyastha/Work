-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
                                                      I AM HAPPY FOR THIS
class Solution {
public:
    int countPoints(string rings) {
        struct Node{
         char red;
         char blue;
         char green;
        };
        unordered_map<char,Node>mp;
        for(int i=1;i<rings.size();i+=2){
            if(rings[i-1]=='R') mp[rings[i]].red=1;
            else if(rings[i-1]=='G') mp[rings[i]].green=1;
            else if(rings[i-1]=='B') mp[rings[i]].blue=1;
        }                                                                                     //o(3n)space 
                                                                                               //o(2n) time
        int count=0;
        for(auto x:mp){
            Node n= x.second;
            if(x.second.red==1 && x.second.blue==1 &&x.second.green==1 )count++;
        }
        return count;
        
    }
};
--------------------------------------------------------------------------------------------------------------------------------------------------------------
 BITMASK APPROACH _________  AWESOME AND O(1) SPACE
 
 
 
 
 class Solution {
public:
    int countPoints(string rings) {
        int count=0;
        vector<int>rods(10);
        
        for(int i=0;i<rings.size();i+=2){
            int val=(rings[i]=='R')?1:(rings[i]=='G'?2:4);
            rods[rings[i+1]-'0']|=val;
        }
        for(auto x:rods) if(x==7)count++;
        return count;
    }
};
