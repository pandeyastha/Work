/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
       // ListNode* dummy=new Listnode();
        ListNode* cp=NULL;
        int carry=0;
        stack<int>st1,st2;
        ListNode*d1=l1;
        while(d1!=NULL){st1.push(d1->val);d1=d1->next;}
        d1=l2;
        while(d1!=NULL){st2.push(d1->val);d1=d1->next;}
        while(!st1.empty()||!st2.empty()||carry){
            int sum=0;
            if(!st1.empty()){
                sum+=st1.top();
                st1.pop();
            }
            if(!st2.empty()){
                sum+=st2.top();
                st2.pop();
            }
            sum+=carry;
            carry=sum/10;
            ListNode* temp=new ListNode(sum%10);
            temp->next=cp;
            cp=temp;
        }
        return cp;
    }
};
